version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Install dependencies and Lint app
          command: |
            sudo apt-get update
            sudo apt-get install python3-venv
            python3 -m venv virtualenv
            . virtualenv/bin/activate
            make install
            make lint
  
  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Build and push docker image to dockerhub
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker build -t rexben/flask-app:${CIRCLE_WORKFLOW_ID:0:7} .
            docker push rexben/flask-app

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          flask-app
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
            kubectl get nodes
            kubectl get deployment
            echo parameters.cluster-name
          name: Test cluster

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          flask-app
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: depl.yml
          resource-name: deployment/flask-app


workflows:
  deployment:
    jobs:
      - lint
      - build:
          requires:
            - lint
      - aws-eks/create-cluster:
          cluster-name: flask-app
      - create-deployment:
          cluster-name: flask-app
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: flask-app
          container-image-updates: 'flask-app=rexben/flask-app'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: flask-app
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/flask-app
      - test-cluster:
          cluster-name: flask-app
          requires:
            - aws-eks/update-container-image
      # - aws-eks/delete-cluster:
      #     cluster-name: flask-app
      #     requires:
      #       - test-cluster
